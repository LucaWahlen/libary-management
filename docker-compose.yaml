version: '3'

services:
  injected-service:
    build:
      context: ./
      dockerfile: cmd/injected-service/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=libraryDB
      - DATABASE_URL=postgres://postgres:password@postgres:5432/libraryDB
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  direct-service:
    build:
      context: ./
      dockerfile: cmd/direct-service/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=libraryDB
      - DATABASE_URL=postgres://postgres:password@postgres:5432/libraryDB
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: libraryDB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    volumes:
      - ./internal/repository/postgres/migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:password@postgres:5432/libraryDB?sslmode=disable",
      "up"
    ]
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-data: